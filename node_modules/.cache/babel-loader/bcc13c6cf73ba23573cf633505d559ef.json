{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReactProject\\\\rym\\\\src\\\\Characters.js\";\nimport React, { Component } from 'react';\nimport * as characters from './characters.json';\nimport { Form } from './Form';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Characters extends Component {\n  constructor(props) {\n    super(props);\n\n    this.extractChapters = chapters => {\n      let res = [];\n      chapters.map((ch, i) => res.push(ch.split(\"/\").slice(-1)[0]));\n      return res.join(\",\");\n    };\n\n    this.addCharapter = character => {\n      this.setState({\n        characters: [...this.state.characters, character]\n      });\n    };\n\n    this.rmCharacter = name => {\n      let copy = [...this.state.characters];\n      let index = -1;\n      copy.forEach((ch, i) => {\n        if (ch.name === name) {\n          index = i;\n        }\n      });\n      copy.splice(index, 1);\n      this.setState({\n        characters: copy\n      });\n    };\n\n    this.state = {\n      characters: characters.results\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        addCharapter: this.addCharapter,\n        name: \"Rick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), this.state.characters.map((ch, i) => /*#__PURE__*/_jsxDEV(Card, {\n        rmCharacter: this.rmCharacter,\n        titulo: ch.name,\n        state: ch.status,\n        gender: ch.gender,\n        chapters: this.extractChapters(ch.episode)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","characters","Form","Card","Characters","constructor","props","extractChapters","chapters","res","map","ch","i","push","split","slice","join","addCharapter","character","setState","state","rmCharacter","name","copy","index","forEach","splice","results","render","status","gender","episode"],"sources":["C:/ReactProject/rym/src/Characters.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport * as characters from './characters.json'\r\n\r\nimport { Form }  from './Form';\r\nimport Card from './Card';\r\n\r\nexport default class Characters extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        characters: characters.results\r\n      }    \r\n    }\r\n  \r\n    extractChapters = (chapters) => {\r\n      let res = [];\r\n      chapters.map((ch,i) =>\r\n        res.push(ch.split(\"/\").slice(-1)[0])\r\n      )\r\n      return res.join(\",\");\r\n    }\r\n  \r\n    addCharapter = (character) => {\r\n      this.setState({characters: [...this.state.characters, character]});\r\n    }\r\n  \r\n    rmCharacter = (name) => {\r\n      let copy = [...this.state.characters];\r\n      let index = -1;\r\n      copy.forEach((ch, i) => {\r\n        if(ch.name === name){\r\n          index = i;\r\n        }\r\n      })\r\n      copy.splice(index, 1);\r\n      this.setState({characters: copy});\r\n    }\r\n  \r\n    render(){\r\n      return(\r\n        <div>\r\n          <Form addCharapter= {this.addCharapter} name=\"Rick\" />\r\n          {this.state.characters.map((ch, i) =>\r\n            <Card \r\n                rmCharacter = {this.rmCharacter}\r\n                key={i} \r\n                titulo={ch.name} \r\n                state = {ch.status} \r\n                gender = {ch.gender} \r\n                chapters={this.extractChapters(ch.episode)} />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,UAAZ,MAA4B,mBAA5B;AAEA,SAASC,IAAT,QAAsB,QAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;EAC7CK,WAAW,CAACC,KAAD,EAAO;IAChB,MAAMA,KAAN;;IADgB,KAOlBC,eAPkB,GAOCC,QAAD,IAAc;MAC9B,IAAIC,GAAG,GAAG,EAAV;MACAD,QAAQ,CAACE,GAAT,CAAa,CAACC,EAAD,EAAIC,CAAJ,KACXH,GAAG,CAACI,IAAJ,CAASF,EAAE,CAACG,KAAH,CAAS,GAAT,EAAcC,KAAd,CAAoB,CAAC,CAArB,EAAwB,CAAxB,CAAT,CADF;MAGA,OAAON,GAAG,CAACO,IAAJ,CAAS,GAAT,CAAP;IACD,CAbiB;;IAAA,KAelBC,YAfkB,GAeFC,SAAD,IAAe;MAC5B,KAAKC,QAAL,CAAc;QAAClB,UAAU,EAAE,CAAC,GAAG,KAAKmB,KAAL,CAAWnB,UAAf,EAA2BiB,SAA3B;MAAb,CAAd;IACD,CAjBiB;;IAAA,KAmBlBG,WAnBkB,GAmBHC,IAAD,IAAU;MACtB,IAAIC,IAAI,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWnB,UAAf,CAAX;MACA,IAAIuB,KAAK,GAAG,CAAC,CAAb;MACAD,IAAI,CAACE,OAAL,CAAa,CAACd,EAAD,EAAKC,CAAL,KAAW;QACtB,IAAGD,EAAE,CAACW,IAAH,KAAYA,IAAf,EAAoB;UAClBE,KAAK,GAAGZ,CAAR;QACD;MACF,CAJD;MAKAW,IAAI,CAACG,MAAL,CAAYF,KAAZ,EAAmB,CAAnB;MACA,KAAKL,QAAL,CAAc;QAAClB,UAAU,EAAEsB;MAAb,CAAd;IACD,CA7BiB;;IAEhB,KAAKH,KAAL,GAAa;MACXnB,UAAU,EAAEA,UAAU,CAAC0B;IADZ,CAAb;EAGD;;EA0BDC,MAAM,GAAE;IACN,oBACE;MAAA,wBACE,QAAC,IAAD;QAAM,YAAY,EAAG,KAAKX,YAA1B;QAAwC,IAAI,EAAC;MAA7C;QAAA;QAAA;QAAA;MAAA,QADF,EAEG,KAAKG,KAAL,CAAWnB,UAAX,CAAsBS,GAAtB,CAA0B,CAACC,EAAD,EAAKC,CAAL,kBACzB,QAAC,IAAD;QACI,WAAW,EAAI,KAAKS,WADxB;QAGI,MAAM,EAAEV,EAAE,CAACW,IAHf;QAII,KAAK,EAAIX,EAAE,CAACkB,MAJhB;QAKI,MAAM,EAAIlB,EAAE,CAACmB,MALjB;QAMI,QAAQ,EAAE,KAAKvB,eAAL,CAAqBI,EAAE,CAACoB,OAAxB;MANd,GAESnB,CAFT;QAAA;QAAA;QAAA;MAAA,QADD,CAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAcD;;AA/C4C"},"metadata":{},"sourceType":"module"}